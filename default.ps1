Framework "4.5.1"

$projectName = "CISample"
$configuration = 'Debug'
$basedir = resolve-path '.\'
$src = "$basedir\src"

$publish_dir = "$basedir\Publish"

$sln = "$src\CISample.sln"
$deploy_proj = "$src\CISample.UI\CISample.UI.csproj"
$test_results = "$basedir\TestResults"

$packageVersion = 1.0.0.0
$octopusPackageDir = "$publish_dir\packages"

task default -depends UnitTest

task webdeploypackage -depends UnitTest{
 msbuild $deploy_proj /T:Package /P:Configuration=Release /P:PackageLocation=$publish_dir
}

task package -depends OctoPack

task CleanOctopusFolder {
    $exists = Test-Path $octopusPackageDir
    if($exists){
        Remove-Item -Recurse -Force $octopusPackageDir
    }
}

task OctoPack -depends Compile, CleanOctopusFolder {
    exec { msbuild /t:build /v:q /nologo /p:Configuration=$configuration $sln /p:RunOctoPack=true /p:OctoPackPackageVersion=$packageVersion /p:OctoPackPublishPackageToFileShare=$octopusPackageDir /p:OctoPackIgnoreNonRootScripts=true }
}

task CommonAssemblyInfo {
    $version = (Get-Date).ToString("yyyy.MM.dd.HHmm")
    create-commonAssemblyInfo "$version" $projectName "$src\CommonAssemblyInfo.cs"
	$packageVersion = $version
}

task Compile -depends CommonAssemblyInfo {
    exec { msbuild /t:clean /v:q /nologo /p:Configuration=$configuration $sln }
    exec { msbuild /t:build /v:q /nologo /p:Configuration=$configuration $sln }
}

task UnitTest -depends Compile {
	create_directory $test_results
	
	$runner = "$src\packages\NUnit.Runners.2.6.4\tools\nunit-console.exe"
		
	# Add any additional tests here as needed
    .$runner $src\CISample.Tests\bin\$configuration\CISample.Tests.dll /framework:net-4.5 /noshadow  /nologo /nodots /xml:$test_results\CISample.Tests.xml
}

function global:create_directory($directory_name) {
  	if(Test-Path $directory_name)
	{
		Remove-Item $directory_name\* -recurse
	}
	else { mkdir $directory_name }
}

function global:create-commonAssemblyInfo($version,$applicationName,$filename)
{
  write-host ("Version: " + $version) -ForegroundColor Green
  write-host ("Project Name: " + $projectName) -ForegroundColor Green

"using System;
using System.Reflection;
using System.Runtime.InteropServices;

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behaviour and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: ComVisibleAttribute(false)]
[assembly: AssemblyVersionAttribute(""$version"")]
[assembly: AssemblyFileVersionAttribute(""$version"")]
[assembly: AssemblyCopyrightAttribute(""Copyright 2015"")]
[assembly: AssemblyProductAttribute(""$projectName"")]
[assembly: AssemblyCompanyAttribute("""")]
[assembly: AssemblyConfigurationAttribute(""release"")]
[assembly: AssemblyInformationalVersionAttribute(""$version"")]"  | out-file $filename -encoding "ASCII"    
}
